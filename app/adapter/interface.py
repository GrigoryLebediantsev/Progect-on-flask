from typing import Protocol, Any
from app.models import QuestionInterface, Expression, User


class DatabaseInterface(Protocol):
    @staticmethod
    def add_user(user: User) -> None: ...

    @staticmethod
    def get_user(user_id: int) -> User: ...

    @staticmethod
    def get_all_users() -> list: ...

    @staticmethod
    def create_user_history(user_id: int) -> None: ...

    @staticmethod
    def get_user_history(user_id: int) -> dict: ...

    @staticmethod
    def add_to_user_history(user_id: int, data_to_history: dict) -> None: ...

    @staticmethod
    def add_expression(expression: Expression) -> None: ...

    @staticmethod
    def get_expression(expression_id: int) -> Expression: ...

    @staticmethod
    def add_question(question: QuestionInterface) -> None: ...

    @staticmethod
    def get_question(question_id: int) -> QuestionInterface: ...

    @staticmethod
    def get_random_question() -> QuestionInterface: ...

class DatabaseMemberInterface(Protocol):
    def add(self) -> None: ...
    def get(self) -> Any: ...

